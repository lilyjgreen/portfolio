// Lily Green, lab Wed, Lab #9

#include <stdio.h>
#include <string.h>

int count = 0;
char lessons [5][20];
char rnumbers[5][20];
int rsize[5] = {0,0,0,0,0};
const int SIZE = 5;

void request(void);
void cancel(void);
void list(void);
void startletter(void);
void group(void);
_Bool priority(void);
int letterappear(char chartocheck);

int main(void)
{
	int i;
	char options;
	_Bool priority1 = 0;
	char lettertocheck;
	int letterappearances;

	//initialize array of strings
	for(i=0; i<SIZE; i++)
	{
		lessons[i][0] = '\0';
	}
	while(1)
	{
		printf("Enter 1 to request a lesson\n");
		printf("Enter 2 to cancel a lesson\n");
		printf("Enter 3 to list lessons\n");
		printf("Enter 4 to list names starting with a letter\n");
		printf("Enter 5 to list reservations of a group size\n");
		printf("Enter 6 to reserve with priority\n");
		printf("Enter 7 to check appearences of a letter\n");
		printf("Enter 9 to quit\n");
	
		scanf("%d", &options);
		switch(options)
		{
			case 1:
				//request lesson
				request();
				break;
			case 2:
				//cancel lesson
				cancel();
				break;
			case 3:
				//list lessons
				list();
				break;
			case 4:
				//list names starting with character
				startletter();
				break;
			case 5:
				//list reservations with group size
				group();
				break;
			case 6:
				//do priority reservatoin if not used
				if(priority1 == 0)
				{
					priority1  = priority();
					//becomes 1 if used right otherwhise 0
				}
				else
					printf("Priority reservation have already been used\n");
				break;
			case 7:
				//check letter appearence
				printf("Which letter do you want to check?\n");
				scanf("%s", &lettertocheck);
				letterappearances = letterappear(lettertocheck);
				printf("the letter %c appears %d times in all names.\n", lettertocheck, letterappearances);
				break;
			case 9:
				//end
				return 0;
			default:
				printf("Please enter 1, 2, 3, 4, 5, 6, 7, or 9\n");
		}
	}
	return 0;
}

//request lesson
void request(void)
{
	int i;
	char user[20];
	char usernumber[20];
	int groupsize;
	//check if lessons are full
	if(count == SIZE)
	{
		printf("All lessons are full today, check back later\n");
		return;
	}
	else
	{
		//add new lesson with name input in next slot
		i=count-1;
		printf("What is the name?\n");
		scanf("%s", user);
		//tell user if name is taken, change if so
		if(count != 0)
		{
			i=0;
			while(i<count)
			{
				if(strcmp(user, lessons[i])==0)
				{
					printf("the name is taken\n");
					return;
				}
				else
				{
					i++;
				}
			}
		}
		//put groupsize in array
		printf("what is the size of group? Please make the size between 1 and 4\n");
		scanf("%d", &groupsize);
		//ensure size is between 1 and 4
		if (groupsize < 1 || groupsize > 4)
			{
				printf("the size is not between 1 and 4\n");
				return;
			}
		//put phone number in array
		printf("what is the phone number?");
		strcpy(lessons[count], user);
		scanf("%s", usernumber);

		//put in values if everythug is right
		rsize[count] = groupsize;
		strcpy(rnumbers[count], usernumber);
			printf("%s has successfully signed up for a leson at %d pm.\n", user, count+1);
		count++;
		return;
	}
}

//cancel lesson
void cancel(void)
{
	int i;
	char user[20];
	//check if there is a lesson
	if(count ==0)
	{
		printf("there are no lessons reserved\n");
	}
	else
	{
		//search for lessons with the name
		printf("what name is the lesson under?\n");
		scanf("%s", user);
		for(i=0; i<count; i++)
		{
			if(strcmp(lessons[i], user) == 0)
			{
				printf("message to %s : %s has successfully cancelled the lesosn at %d pm\n", rnumbers[i], user, i+1);
				lessons[i][0] = '\0';
				rnumbers[i][0] = '\0';
				rsize[i] = 0;
				count--;
				break;
			}
		}
		if(i ==count)
		{
			printf("there is not reservation under that name\n");
		}
		else
		{
			//shift lessons up so there is no empty slot between lessons
			for(;i<count; i++)
			{
				strcpy(lessons[i], lessons[i+1]);
				strcpy(rnumbers[i], rnumbers[i+1]);
				rsize[i] = rsize[i+1];
				printf("Message to %s :The lesson under %s has been moved from %d tpo %d pm\n", rnumbers[i], lessons[i], i+2, i+1);
			}
			lessons[i][0] = '0';
		}
	}
	return;
}

//list all lessons
void list(void)
{
	int i;
	printf("there are currently %d lessons signed up\n", count);
	//list of lessons that are signed up
	for(i=0; i<count; i++)
	{
		printf("%s with number %s has reserved for a lesson at %d pm with group size%d\n", lessons[i], rnumbers[i], i+1, rsize[i]);
	}
	//list of lesosns that are not signed up
	for(i=count; i<SIZE; i++)
	{
		printf("free at %d pm\n", i+1);
	}
	return;
}

//list reservation names starting with a letter
void startletter(void)
{
	char namel;
	int i;
	//check if there are any lessons signed up, end if there are none
	if (count == 0)
	{
		printf("there are no lessons signed up\n");
		return;
	}
	//input  starting letter
	printf("What does the name start with?\n");
	scanf("%c", &namel);
	//search through lessons for name that start with character
	for(i=0; i<SIZE; i++)
	{
		if(lessons[i][0] == namel)
		{
			printf("%s has reserved a lesson with a group %d at %d pm\n", lessons[i], rsize[i], i+1);
		}
	}
	return;
}

//list reservations with a group size
void group(void)
{
	int groupsize;
	int i;
	//check if there are any lessons signed up, end if there are none
	if (count ==0)
	{
		printf("there are no lessons signed up\n");
		return;
	}
	do
	{
		printf("what is the group sie? all sizes are between 1 and 4\n");
		scanf("%d", &groupsize);
	}
	while (groupsize < 1 || groupsize > 4);
	for(i=0; i<count; i++)
	{
		//show all reservations with matching group size
		if(groupsize == rsize[i])
		{
			printf("%s has a reservation fo size %d at %d pm\n", lessons[i], groupsize, i+1);
		}
	}
	return;
}

//reserve with priority
_Bool priority(void)
{
	int i;
	int numtocheck = (count ==5) ? count-1 : count;
	char user[20];
	char usernumber[20];
	int groupsize;
	//prepare data for priority reserve
	printf("what is the reservation name?\n");
	scanf("%s", user);
	i=0;
	while (i<numtocheck)
	{
		if(strcmp(user, lessons[i]) == 0)
		{
			printf("the name is taken\n");
			return 0;
		}
		else
			i++;
	}
	printf("what is the size of group? please have it between 1 and 4\n");
	scanf("%d", &groupsize);
	if (groupsize <1 || groupsize > 4)
		{
			printf("the size is not between 1 and 4\n");
			return 0;
		}
	printf("what is the phone number?\n");
	scanf("%s", &usernumber);
	//notify cancel last spot if full
	if(count == 5)
	{
		printf("message to %s: the reservation under %s with group size %d at 5pm has been cancelled.\n", rnumbers[4], lessons[4], rsize[4]);
		count--;
	}
	//shift lesosns up, prepare first spot for priority reserve
	if(count> 0)
	{
		for(i=count-1; i>=0; i--)
		{
			printf("message to %s: the reservation under %s with group size %d has been moved from %d pm to %d pm\n", rnumbers[i], lessons[i], rsize[i], i+1, i+2);
			strcpy(lessons[i+1], lessons[i]);
			strcpy(rnumbers[i+1], rnumbers[i]);
			rsize[i+1] = rsize[i];
		}
	}
	//priority reserve
	strcpy(lessons[0], user);
	strcpy(rnumbers[0], usernumber);
	rsize[0] = groupsize;
	printf("%s has successfully signed up for a lesson at 1 pm\n", user);
	count++;
	return 1;
}

//count letters
int letterappear(char chartocheck)
{
	char *p;
	int i;
	int letterapp = 0;
	//go through string array
	for (i=0; i<count; i++)
	{
		p = lessons[i];
		//check for matches as string is traversed
		while(*p != '\0')
		{
			if(*p == chartocheck)
			{
				letterapp++;
			}
			p++;
		}
	}
	return letterapp;
}
